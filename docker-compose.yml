
services:
  
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"      
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
      - MINIO_DOMAIN=minio
    networks:
      - dqsdatalabs
    command: ["server", "/data", "--console-address", ":9001"]

  miniosetup:
    image: minio/mc:latest
    container_name: minio-mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add minio http://minio:9000 minio minio123;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      exit 0
      "
    networks:
      - dqsdatalabs

  spark-master:
    # build: 
    #   context: ./docker/flink
    #   dockerfile: Dockerfile
    image: spark-sandbox:latest
    container_name: spark-master
    environment:
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
    ports:
        - "8080:8080"
        - "7077:7077"
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master    
    networks:
      - dqsdatalabs

  spark-worker:
    # build: 
    #   context: ./docker/spark
    #   dockerfile: Dockerfile
    image: spark-sandbox:latest
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8083:8083"
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    environment:
      - SPARK_WORKER_WEBUI_PORT=8083
      - SPARK_MASTER=spark://spark-master:7077
    networks:
      - dqsdatalabs
    deploy:
        resources:
          limits:
            cpus: "3.0"
            memory: 2G

  flink-jobmanager:
    # build: 
    #   context: ./docker/flink
    #   dockerfile: Dockerfile
    image: flink-sandbox:latest
    container_name: flink-jobmanager
    depends_on:
      - minio
    ports:
      - "8081:8081"
    expose:
      - "6123"
    environment:
      FLINK_MODE: jobmanager
      FLINK_CFG_REST_PORT: 8081
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
    command: jobmanager
    networks:
      - dqsdatalabs

  flink-taskmanager:
    # build: 
    #   context: ./docker/flink
    #   dockerfile: Dockerfile
    image: flink-sandbox:latest
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    environment:
      FLINK_MODE: taskmanager
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
    command: taskmanager
    networks:
      - dqsdatalabs

  jupyter:
    # build: 
    #   context: ./docker/jupyter
    #   dockerfile: Dockerfile
    image: jupyter-sandbox:latest
    container_name: jupyter-notebooks
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - ./docker/jupyter/datasets:/home/jovyan/datasets
      - ./docker/jupyter/notebooks:/home/jovyan/notebooks
    networks:
      - dqsdatalabs


networks:
  dqsdatalabs:
    name: dqsdatalabs
    driver: bridge
    ipam:
      config:
        - subnet: "172.50.0.0/24"
          gateway: "172.50.0.1"
